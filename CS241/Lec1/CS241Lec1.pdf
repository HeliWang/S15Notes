\documentclass[12pt]{article}

\setlength\parindent{0pt}
\newcommand{\myt}[1]{\textbf{\underline{#1}}}

\usepackage{mathtools}

\title{\vspace{-15ex}CS241 Lecture 1 - Foundations of Sequential Programs\vspace{-1ex}}
\author{Graham Cooper}

\begin{document}
	\maketitle
	
	\section*{Intro}
	Prof: 	Brad Lushman\\
	Room: 	DC 3110\\
	ISA:	Akshaya Senthi cs241@uwaterloo.ca\\
	Web:	https://www.student.cs.uwaterloo.ca/\~cs241\\
	
	\myt{What is a "Sequential Program"}
	\begin{itemize}
		\item "Ordinary" (Not concurrent or parallel)
		\item "Single-threaded" (Only one thing going on at a time)
	\end{itemize}
	
	\myt{Foundations}
	\begin{itemize}
		\item understand how seq.programs "work"
		\item from the groud up
	\end{itemize}
	
	\myt{Starting Point:}
	\begin{itemize}
		\item bare hardware (sort of)
		\item for CS241 (simulated MIPS machine)
		\item (only interprets 1s \& 0s)
	\end{itemize}
	
	\noindent{At the end we will get programs written in a C-like language to run on MIPS}
	
	\section*{Binary and Hexidecimal Numbers}
	\myt{Bits}
	\begin{itemize}
		\item 0 or 1, high or low voltages
		\item binary digit 
		\item configurations of magnetic media (CD etc)
		\item all the computer understands
		\item group bits together
	\end{itemize}
	
	\myt{Byte:} 8 bits eg 11001001, 2$^8$ = 256 possible bytes\\
	
	\myt{Word:}
	\begin{itemize}
		\item machine specific grouping of bytes
		\item we will assume a 32-bit computer architecture
		\item 1 word = 32 bits = 4 bytes
	\end{itemize}
	
	\emph{4 bits (1/2 a btye is called a nibble)}\\
	
	\myt{Q:} Given a byte, (or a word) in the computer's memory, what does it mean? ie what does 11001001 mean?\\
	
	\myt{A:} It could mean many things.
	\subsection*{1) A number, What number?}
	\begin{itemize}
		\item Binary number system
		\item $1*2^7 + 1*2^6 + 0*2^5 + 0*2^4 + 1*2^3 + 0*2^2 + 0*2^1 + 1*2^0 = 201$
	\end{itemize}
	
	How can we represent negative numbers?
	\subsubsection*{Simple Way}
	\begin{itemize}
		\item Reserve the first bit to represent the sign
		\item 0 for positive 1 for negative
		\item sign magnitude representation
		\item now 11001001 = -(64 + 8 + 1) = -73
		\item two representations for 0: 00000000 10000000
		\item waste (we don't need two zeros)
		\item arithmetic is tricky (eg. add a positive and negative number)
	\end{itemize}
	\subsubsection*{Better Way:}
	\myt{2's Compliment Representation}\\
	
	\begin{enumerate}
		\item Interpret the n-bit number as an unsigned integer
		\item If the first bit is 0, done!
		\item else, subtract $2^n$
	\end{enumerate}
	
	eg: n = 3\\
	
	\begin{tabular}[pos]{| c | c | c | c | c | c | c | c | c |}
		\hline
		 & 000 & 001 & 010 & 011 & 100 & 101 & 110 & 111 \\ \hline
		1) &  0  &  1  &  2  &  3  &  4  &  5  &  6  &  7 \\
		2) &     &     &     &     & -8  & -8  & -8  & -8 \\
		3)   &     &     &     &     & -4  & -3  & -2  & -1 \\
	\end{tabular}
	
	As a number line:\\
	
	\begin{tabular}{c | c | c | c | c | c | c | c}
		000 & 001 & 010 & 011 & 100 & 101 & 110 & 111 \\ \hline
	\end{tabular}
	
	\begin{itemize}
		\item Therefore: n bits represent $-2^(n-1)$ ... $2^(n-1) - 1$
		\item only 1 zero
		\item left bit gives sign
		\item arithmetic is cleaner
		\item eg. same addition circuitry works for both unsigned and 2's compliment
		\item Int 2's comp $11001001 = 201 - 2^8 = 201 - 256 = -55$
	\end{itemize}
	
	\myt{Convenience:} Hexadecimal Notation: 1100 1001 = C9 .. CLOUD9 BOIZZZ
	\begin{itemize}
		\item base 16, 0..9,A..F
		\item more compact than binary
		\item each hex digit is 4 bits
		\item 0xC9 0x is hex
	\end{itemize}
	
	\myt{Q:} Given a byte, 11001001, how can we tell if it is unsigned, sign-magnitude, or 2's compliment?\\
	
	\myt{A:} We can't! Need to remember what our intent was when we stored the byte!
	
	\subsection*{2) What else could the bits represent?}
	\begin{itemize}
		\item A character, which character?
		\item Need a mapping from chars to numbers, a convention
		\begin{itemize}
			\item ASCII
			\begin{itemize}
				\item uses 7 bits
				\item 8th bit is supposed to be 0 (companies used it for other characters)
				\item compatibility issues
				\item 11001001 is not 7-bit ASCII
				\item 01001001 is ASCII for I
			\end{itemize}
			\item Other Encodings:
			\begin{itemize}
				\item EBCDIC
				\item UNICODE
			\end{itemize}
		\end{itemize}
	\end{itemize}
	
	\subsection*{3) An instruction}
	Our instructions will be 32 bits long
	
	\subsection*{4) Garbage (unused memory)}
	
	\myt{Assignment 0}\\
	Download MIPS reference sheet on the course webpage and bring to every class
	
\end{document}